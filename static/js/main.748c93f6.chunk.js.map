{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","services/user.ts","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","el","getUserById","userId","usersFromServer","find","App","useState","setTitle","titleError","setTitleError","setUserId","userIdError","setUserIdError","todoList","setTodoList","newId","Math","max","newTodo","action","method","onSubmit","event","preventDefault","currentTodo","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.748c93f6.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={cn('TodoInfo',\n      { 'TodoInfo--completed': todo.completed })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    {todo.user && (\n      <UserInfo user={todo.user} />\n    )}\n  </article>\n);\n","import React from 'react';\n\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(el => (\n      <TodoInfo todo={el} key={el.id} />\n    ))}\n  </section>\n);\n","import { User } from '../types/User';\nimport usersFromServer from '../api/users';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find(el => el.id === userId) || null;\n}\n","import './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { getUserById } from './services/user';\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [userIdError, setUserIdError] = useState(false);\n\n  const [todoList, setTodoList] = useState<Todo[]>(todos);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserIdError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const newId = Math.max(...todos.map((el) => el.id));\n\n  const newTodo = {\n    title,\n    userId,\n    completed: false,\n    user: getUserById(userId),\n    id: newId + 1,\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!userId) {\n      setUserIdError(true);\n    }\n\n    if (!userId || !title) {\n      return;\n    }\n\n    setTodoList(currentTodo => [...currentTodo, newTodo]);\n\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <label className=\"field\" htmlFor=\"title\">\n          {'Title: '}\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </label>\n\n        <div className=\"field\">\n          <label htmlFor=\"user-id\">\n            {'User: '}\n          </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user-id\"\n            value={userId}\n            onChange={handleSelectChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(el => (\n              <option value={el.id} key={el.id}>\n                {el.name}\n              </option>\n            ))}\n          </select>\n\n          {userIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}